package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TicketCommentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketCommentAllPropertiesEquals(TicketComment expected, TicketComment actual) {
        assertTicketCommentAutoGeneratedPropertiesEquals(expected, actual);
        assertTicketCommentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketCommentAllUpdatablePropertiesEquals(TicketComment expected, TicketComment actual) {
        assertTicketCommentUpdatableFieldsEquals(expected, actual);
        assertTicketCommentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketCommentAutoGeneratedPropertiesEquals(TicketComment expected, TicketComment actual) {
        assertThat(actual)
            .as("Verify TicketComment auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketCommentUpdatableFieldsEquals(TicketComment expected, TicketComment actual) {
        assertThat(actual)
            .as("Verify TicketComment relevant properties")
            .satisfies(a -> assertThat(a.getTicketId()).as("check ticketId").isEqualTo(expected.getTicketId()))
            .satisfies(a -> assertThat(a.getAuthorId()).as("check authorId").isEqualTo(expected.getAuthorId()))
            .satisfies(a -> assertThat(a.getBody()).as("check body").isEqualTo(expected.getBody()))
            .satisfies(a -> assertThat(a.getVisibility()).as("check visibility").isEqualTo(expected.getVisibility()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTicketCommentUpdatableRelationshipsEquals(TicketComment expected, TicketComment actual) {
        // empty method
    }
}
