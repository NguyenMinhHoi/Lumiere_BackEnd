package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SurveyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSurveyAllPropertiesEquals(Survey expected, Survey actual) {
        assertSurveyAutoGeneratedPropertiesEquals(expected, actual);
        assertSurveyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSurveyAllUpdatablePropertiesEquals(Survey expected, Survey actual) {
        assertSurveyUpdatableFieldsEquals(expected, actual);
        assertSurveyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSurveyAutoGeneratedPropertiesEquals(Survey expected, Survey actual) {
        assertThat(actual)
            .as("Verify Survey auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSurveyUpdatableFieldsEquals(Survey expected, Survey actual) {
        assertThat(actual)
            .as("Verify Survey relevant properties")
            .satisfies(a -> assertThat(a.getCustomerId()).as("check customerId").isEqualTo(expected.getCustomerId()))
            .satisfies(a -> assertThat(a.getSurveyType()).as("check surveyType").isEqualTo(expected.getSurveyType()))
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getSentAt()).as("check sentAt").isEqualTo(expected.getSentAt()))
            .satisfies(a -> assertThat(a.getDueAt()).as("check dueAt").isEqualTo(expected.getDueAt()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSurveyUpdatableRelationshipsEquals(Survey expected, Survey actual) {
        // empty method
    }
}
