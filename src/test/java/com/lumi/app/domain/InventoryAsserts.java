package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InventoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryAllPropertiesEquals(Inventory expected, Inventory actual) {
        assertInventoryAutoGeneratedPropertiesEquals(expected, actual);
        assertInventoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryAllUpdatablePropertiesEquals(Inventory expected, Inventory actual) {
        assertInventoryUpdatableFieldsEquals(expected, actual);
        assertInventoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryAutoGeneratedPropertiesEquals(Inventory expected, Inventory actual) {
        assertThat(actual)
            .as("Verify Inventory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryUpdatableFieldsEquals(Inventory expected, Inventory actual) {
        assertThat(actual)
            .as("Verify Inventory relevant properties")
            .satisfies(a -> assertThat(a.getProductVariantId()).as("check productVariantId").isEqualTo(expected.getProductVariantId()))
            .satisfies(a -> assertThat(a.getWarehouseId()).as("check warehouseId").isEqualTo(expected.getWarehouseId()))
            .satisfies(a -> assertThat(a.getQuantity()).as("check quantity").isEqualTo(expected.getQuantity()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryUpdatableRelationshipsEquals(Inventory expected, Inventory actual) {
        // empty method
    }
}
