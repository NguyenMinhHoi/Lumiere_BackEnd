package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VoucherRedemptionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoucherRedemptionAllPropertiesEquals(VoucherRedemption expected, VoucherRedemption actual) {
        assertVoucherRedemptionAutoGeneratedPropertiesEquals(expected, actual);
        assertVoucherRedemptionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoucherRedemptionAllUpdatablePropertiesEquals(VoucherRedemption expected, VoucherRedemption actual) {
        assertVoucherRedemptionUpdatableFieldsEquals(expected, actual);
        assertVoucherRedemptionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoucherRedemptionAutoGeneratedPropertiesEquals(VoucherRedemption expected, VoucherRedemption actual) {
        assertThat(actual)
            .as("Verify VoucherRedemption auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoucherRedemptionUpdatableFieldsEquals(VoucherRedemption expected, VoucherRedemption actual) {
        assertThat(actual)
            .as("Verify VoucherRedemption relevant properties")
            .satisfies(a -> assertThat(a.getVoucherId()).as("check voucherId").isEqualTo(expected.getVoucherId()))
            .satisfies(a -> assertThat(a.getOrderId()).as("check orderId").isEqualTo(expected.getOrderId()))
            .satisfies(a -> assertThat(a.getCustomerId()).as("check customerId").isEqualTo(expected.getCustomerId()))
            .satisfies(a -> assertThat(a.getRedeemedAt()).as("check redeemedAt").isEqualTo(expected.getRedeemedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoucherRedemptionUpdatableRelationshipsEquals(VoucherRedemption expected, VoucherRedemption actual) {
        // empty method
    }
}
