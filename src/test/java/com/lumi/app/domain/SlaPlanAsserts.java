package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SlaPlanAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSlaPlanAllPropertiesEquals(SlaPlan expected, SlaPlan actual) {
        assertSlaPlanAutoGeneratedPropertiesEquals(expected, actual);
        assertSlaPlanAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSlaPlanAllUpdatablePropertiesEquals(SlaPlan expected, SlaPlan actual) {
        assertSlaPlanUpdatableFieldsEquals(expected, actual);
        assertSlaPlanUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSlaPlanAutoGeneratedPropertiesEquals(SlaPlan expected, SlaPlan actual) {
        assertThat(actual)
            .as("Verify SlaPlan auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSlaPlanUpdatableFieldsEquals(SlaPlan expected, SlaPlan actual) {
        assertThat(actual)
            .as("Verify SlaPlan relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getFirstResponseMins()).as("check firstResponseMins").isEqualTo(expected.getFirstResponseMins()))
            .satisfies(a -> assertThat(a.getResolutionMins()).as("check resolutionMins").isEqualTo(expected.getResolutionMins()))
            .satisfies(a -> assertThat(a.getActive()).as("check active").isEqualTo(expected.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSlaPlanUpdatableRelationshipsEquals(SlaPlan expected, SlaPlan actual) {
        // empty method
    }
}
