package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CompanyConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAllPropertiesEquals(CompanyConfig expected, CompanyConfig actual) {
        assertCompanyConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertCompanyConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAllUpdatablePropertiesEquals(CompanyConfig expected, CompanyConfig actual) {
        assertCompanyConfigUpdatableFieldsEquals(expected, actual);
        assertCompanyConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAutoGeneratedPropertiesEquals(CompanyConfig expected, CompanyConfig actual) {
        assertThat(actual)
            .as("Verify CompanyConfig auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigUpdatableFieldsEquals(CompanyConfig expected, CompanyConfig actual) {
        assertThat(actual)
            .as("Verify CompanyConfig relevant properties")
            .satisfies(a -> assertThat(a.getCompanyId()).as("check companyId").isEqualTo(expected.getCompanyId()))
            .satisfies(a -> assertThat(a.getAppId()).as("check appId").isEqualTo(expected.getAppId()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigUpdatableRelationshipsEquals(CompanyConfig expected, CompanyConfig actual) {
        // empty method
    }
}
