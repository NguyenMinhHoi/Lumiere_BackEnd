package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KnowledgeArticleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeArticleAllPropertiesEquals(KnowledgeArticle expected, KnowledgeArticle actual) {
        assertKnowledgeArticleAutoGeneratedPropertiesEquals(expected, actual);
        assertKnowledgeArticleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeArticleAllUpdatablePropertiesEquals(KnowledgeArticle expected, KnowledgeArticle actual) {
        assertKnowledgeArticleUpdatableFieldsEquals(expected, actual);
        assertKnowledgeArticleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeArticleAutoGeneratedPropertiesEquals(KnowledgeArticle expected, KnowledgeArticle actual) {
        assertThat(actual)
            .as("Verify KnowledgeArticle auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeArticleUpdatableFieldsEquals(KnowledgeArticle expected, KnowledgeArticle actual) {
        assertThat(actual)
            .as("Verify KnowledgeArticle relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getPublished()).as("check published").isEqualTo(expected.getPublished()))
            .satisfies(a -> assertThat(a.getViews()).as("check views").isEqualTo(expected.getViews()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeArticleUpdatableRelationshipsEquals(KnowledgeArticle expected, KnowledgeArticle actual) {
        assertThat(actual)
            .as("Verify KnowledgeArticle relationships")
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()))
            .satisfies(a -> assertThat(a.getTags()).as("check tags").isEqualTo(expected.getTags()));
    }
}
