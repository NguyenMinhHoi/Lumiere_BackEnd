package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CompanyConfigAdditionalAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAdditionalAllPropertiesEquals(CompanyConfigAdditional expected, CompanyConfigAdditional actual) {
        assertCompanyConfigAdditionalAutoGeneratedPropertiesEquals(expected, actual);
        assertCompanyConfigAdditionalAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAdditionalAllUpdatablePropertiesEquals(
        CompanyConfigAdditional expected,
        CompanyConfigAdditional actual
    ) {
        assertCompanyConfigAdditionalUpdatableFieldsEquals(expected, actual);
        assertCompanyConfigAdditionalUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAdditionalAutoGeneratedPropertiesEquals(
        CompanyConfigAdditional expected,
        CompanyConfigAdditional actual
    ) {
        assertThat(actual)
            .as("Verify CompanyConfigAdditional auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAdditionalUpdatableFieldsEquals(
        CompanyConfigAdditional expected,
        CompanyConfigAdditional actual
    ) {
        assertThat(actual)
            .as("Verify CompanyConfigAdditional relevant properties")
            .satisfies(a -> assertThat(a.getCompanyConfigId()).as("check companyConfigId").isEqualTo(expected.getCompanyConfigId()))
            .satisfies(a -> assertThat(a.getConfigKey()).as("check configKey").isEqualTo(expected.getConfigKey()))
            .satisfies(a -> assertThat(a.getConfigValue()).as("check configValue").isEqualTo(expected.getConfigValue()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompanyConfigAdditionalUpdatableRelationshipsEquals(
        CompanyConfigAdditional expected,
        CompanyConfigAdditional actual
    ) {
        // empty method
    }
}
