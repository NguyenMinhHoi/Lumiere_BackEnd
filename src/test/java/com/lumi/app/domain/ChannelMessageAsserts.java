package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChannelMessageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelMessageAllPropertiesEquals(ChannelMessage expected, ChannelMessage actual) {
        assertChannelMessageAutoGeneratedPropertiesEquals(expected, actual);
        assertChannelMessageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelMessageAllUpdatablePropertiesEquals(ChannelMessage expected, ChannelMessage actual) {
        assertChannelMessageUpdatableFieldsEquals(expected, actual);
        assertChannelMessageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelMessageAutoGeneratedPropertiesEquals(ChannelMessage expected, ChannelMessage actual) {
        assertThat(actual)
            .as("Verify ChannelMessage auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelMessageUpdatableFieldsEquals(ChannelMessage expected, ChannelMessage actual) {
        assertThat(actual)
            .as("Verify ChannelMessage relevant properties")
            .satisfies(a -> assertThat(a.getDirection()).as("check direction").isEqualTo(expected.getDirection()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getSentAt()).as("check sentAt").isEqualTo(expected.getSentAt()))
            .satisfies(a -> assertThat(a.getExternalMessageId()).as("check externalMessageId").isEqualTo(expected.getExternalMessageId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelMessageUpdatableRelationshipsEquals(ChannelMessage expected, ChannelMessage actual) {
        assertThat(actual)
            .as("Verify ChannelMessage relationships")
            .satisfies(a -> assertThat(a.getTicket()).as("check ticket").isEqualTo(expected.getTicket()));
    }
}
