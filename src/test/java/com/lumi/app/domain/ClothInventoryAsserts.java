package com.lumi.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClothInventoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClothInventoryAllPropertiesEquals(ClothInventory expected, ClothInventory actual) {
        assertClothInventoryAutoGeneratedPropertiesEquals(expected, actual);
        assertClothInventoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClothInventoryAllUpdatablePropertiesEquals(ClothInventory expected, ClothInventory actual) {
        assertClothInventoryUpdatableFieldsEquals(expected, actual);
        assertClothInventoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClothInventoryAutoGeneratedPropertiesEquals(ClothInventory expected, ClothInventory actual) {
        assertThat(actual)
            .as("Verify ClothInventory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClothInventoryUpdatableFieldsEquals(ClothInventory expected, ClothInventory actual) {
        assertThat(actual)
            .as("Verify ClothInventory relevant properties")
            .satisfies(a -> assertThat(a.getClothId()).as("check clothId").isEqualTo(expected.getClothId()))
            .satisfies(a -> assertThat(a.getWarehouseId()).as("check warehouseId").isEqualTo(expected.getWarehouseId()))
            .satisfies(a -> assertThat(a.getQuantity()).as("check quantity").isEqualTo(expected.getQuantity()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClothInventoryUpdatableRelationshipsEquals(ClothInventory expected, ClothInventory actual) {
        // empty method
    }
}
